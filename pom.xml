<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.5</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.alfredcode</groupId>
	<artifactId>social_website</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>social_website</name>
	<description>Social website</description>
	<properties>
		<java.version>17</java.version>
	</properties>
	<dependencies>

		<!-- For randon string/number generation -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<!-- For hashing -->
		<dependency>
			<groupId>at.favre.lib</groupId>
			<artifactId>bcrypt</artifactId>
			<version>0.10.2</version>
		</dependency>

		<!-- Mockito, for creating mock objects so we can properly unit test -->
		<!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>5.12.0</version>
			<scope>test</scope>
		</dependency>

		<!-- Lombok (@Getters, @Setters, ...)-->
		<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.32</version>
			<scope>provided</scope>
		</dependency>

		<!-- MySQL driver -->
		<!-- https://mvnrepository.com/artifact/com.mysql/mysql-connector-j -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<version>9.0.0</version>
		</dependency>

		<!-- Template engine -->
	    <dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
	    </dependency>

		<!--
		As far as I understand, this (spring-boot-starter-data-jdbc, below) includes:
			- HikariCP (DataSource implementation)
			- Common RDBMS vendor drivers (MySQL, PostgreSQL, h2, Microsoft SQL)
			- Spring JDBC (@Transactional, @Repository, @Query)
		For this project, I wanted to do some things manually, so I:
			- Removed h2's embedded database dependency
			- Removed spring-boot-starter-data-jdbc
			- Added MySQL driver
			- Added HikariCP
			- Manually configured our DataSource
		-->
		<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jdbc</artifactId>
		</dependency>
		-->

		<!-- HikariCP -->
		<!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
		<dependency>
			<groupId>com.zaxxer</groupId>
			<artifactId>HikariCP</artifactId>
			<version>5.1.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
	    </dependency>

		<!-- AOP, used with Auth.java -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
	    </dependency>

		<!-- I imagine this contains annotations to facilitate creating tests for a spring boot application -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
